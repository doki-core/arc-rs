@export
VonParser =
	@:DictNode |
	@:ListNode |
	@:SpecialNode |
	@:NumNode |
	@:NamespaceNode $
	;

@position
KeyNode = @:IdentifierNode | @:NumNode;

@position
DictNode = '{' {items:DictItem} '}' ;

DictItem = @:KeyValueNode | @:Split;

KeyValueNode = key:KeyNode ':' value:ValueNode;

@position
ListNode =
	'[' {items:ListItem} ']' |
	'{' {items:ListItem} '}' ;

ListItem = @:ValueNode | @:Split;

@string
@position
@no_skip_ws
NumNode = {'0'..'9'}+ [Dot {'0'..'9'}+];

@position
@string
ModifierNode = IdentifierNode !('{'|'[');

@position
NamespaceNode = path:IdentifierNode {(Dot | '::') path:IdentifierNode};

@string
@position
@no_skip_ws
IdentifierNode = (XID_START | '_') {XID_CONTINUE};

@string
@position
SpecialNode = 'null' | 'default' | 'true' | 'false';


@char
@check(unicode_ident::is_xid_start)
XID_START = char;

@char
@check(unicode_ident::is_xid_continue)
XID_CONTINUE = char;

@char
Dot = '.' | '。';

@char
Split = ';' | ',' | '，';